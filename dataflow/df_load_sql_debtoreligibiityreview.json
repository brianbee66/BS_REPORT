{
	"name": "df_load_sql_debtoreligibiityreview",
	"properties": {
		"folder": {
			"name": "Load/BSS"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_reporting_adls",
						"type": "LinkedServiceReference"
					},
					"name": "sourceODS"
				},
				{
					"dataset": {
						"referenceName": "ds_reporting_lookup_mssql",
						"type": "DatasetReference"
					},
					"name": "sourceSQLLookupDebtorErstFk"
				},
				{
					"dataset": {
						"referenceName": "ds_reporting_lookup_mssql",
						"type": "DatasetReference"
					},
					"name": "sourceSQLLookupBsmFk"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_reporting_mssql",
						"type": "DatasetReference"
					},
					"name": "sinkSQL"
				}
			],
			"transformations": [
				{
					"name": "SelectODS"
				},
				{
					"name": "dcolSQL"
				},
				{
					"name": "JoinSQLLookupDebtorErstFk"
				},
				{
					"name": "AlterRowSQL"
				},
				{
					"name": "SelectSQLLookupDebtorErstFk"
				},
				{
					"name": "FilterODS"
				},
				{
					"name": "SelectSQLLookupBsmFk"
				},
				{
					"name": "JoinSQLLookupBsmFk"
				}
			],
			"script": "parameters{\n\tpartdistFrom as string\n}\nsource(output(\n\t\towningbusinessunit as string,\n\t\tntt_debtoreligibilityreviewstatusid as string,\n\t\tntt_name as string,\n\t\tstatecode as string,\n\t\tstatuscode as string,\n\t\tcreatedby as string,\n\t\tntt_eligibilitystatusid as string,\n\t\tntt_moratoriumid as string,\n\t\tntt_creditornotes as string,\n\t\townerid as string,\n\t\tmodifiedon as string,\n\t\towninguser as string,\n\t\tmodifiedby as string,\n\t\tntt_debtoreligibilityreviewid as string,\n\t\tntt_creditorid as string,\n\t\tcreatedon as string,\n\t\tntt_moneyadvisernotes as string,\n\t\tintBatchId as integer,\n\t\tpartdist as date,\n\t\tblIsValid as boolean,\n\t\ttsCreatedOn as timestamp,\n\t\ttsModifiedOn as timestamp,\n\t\tstrNTTDebtorEligibilityReviewId as string,\n\t\tstrNTTDebtorEligibilityReviewStatusId as string,\n\t\tstrNTTMoratoriumId as string,\n\t\tstrNTTEligibilityStatusId as string,\n\t\tblIsTruncate as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tformat: 'delta',\n\tfileSystem: 'curation',\n\tfolderPath: 'ods/bss/dynamics/debtors/debtoreligibilityreview') ~> sourceODS\nsource(output(\n\t\tdebtor_erst_pk_skey as integer,\n\t\tntt_name as string,\n\t\tntt_debtoreligibilitystatustypeid as string,\n\t\tisValid as boolean,\n\t\tisTruncate as boolean,\n\t\tbatch_id as integer,\n\t\tcreatedon as timestamp,\n\t\tmodifiedon as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceSQLLookupDebtorErstFk\nsource(output(\n\t\tbsm_pk_skey as integer,\n\t\tbst_fk as integer,\n\t\tmao_fk as integer,\n\t\tbs_status_type_fk as integer,\n\t\tbs_debtor_fk as integer,\n\t\tparent_cr_fk as integer,\n\t\tchild_cr_fk as integer,\n\t\tntt_breathingspacemoratoriumid as string,\n\t\tntt_commencementdate as timestamp,\n\t\tntt_createdfromapi as boolean,\n\t\tntt_expirydate as timestamp,\n\t\tntt_closuredate as timestamp,\n\t\tntt_submissiondate as string,\n\t\tntt_activeregisterperiodstartdate as timestamp,\n\t\tntt_removedfromregisterdate as timestamp,\n\t\tntt_activeregister as boolean,\n\t\tisValid as boolean,\n\t\tisTruncate as boolean,\n\t\tbatch_id as integer,\n\t\tcreatedon as timestamp,\n\t\tmodifiedon as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceSQLLookupBsmFk\nJoinSQLLookupBsmFk select(mapColumn(\n\t\tbatch_id = intBatchId,\n\t\tisValid = blIsValid,\n\t\tcreatedon = tsCreatedOn,\n\t\tmodifiedon = tsModifiedOn,\n\t\tntt_debtoreligibilityreviewid = strNTTDebtorEligibilityReviewId,\n\t\tisTruncate = blIsTruncate,\n\t\tdebtor_erst_fk = debtor_erst_pk_skey,\n\t\tbsm_fk = bsm_pk_skey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectODS\nSelectODS derive(ntt_debtoreligibilityreviewid = coalesce(ntt_debtoreligibilityreviewid, 'unknown'),\n\t\tcreatedon_dimdate_fk = iif(createdon == toTimestamp('1900-01-01 00:00:00'), -1, toInteger(toString(createdon, 'yyyyMMdd'))),\n\t\tmodifiedon_dimdate_fk = iif(modifiedon == toTimestamp('1900-01-01 00:00:00'), -1, toInteger(toString(modifiedon, 'yyyyMMdd')))) ~> dcolSQL\nFilterODS, SelectSQLLookupDebtorErstFk join(strNTTEligibilityStatusId == ntt_debtoreligibilitystatustypeid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSQLLookupDebtorErstFk\ndcolSQL alterRow(upsertIf(true())) ~> AlterRowSQL\nsourceSQLLookupDebtorErstFk select(mapColumn(\n\t\tdebtor_erst_pk_skey,\n\t\tntt_debtoreligibilitystatustypeid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSQLLookupDebtorErstFk\nsourceODS filter(partdist >= toDate($partdistFrom)) ~> FilterODS\nsourceSQLLookupBsmFk select(mapColumn(\n\t\tbsm_pk_skey,\n\t\tntt_breathingspacemoratoriumid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSQLLookupBsmFk\nJoinSQLLookupDebtorErstFk, SelectSQLLookupBsmFk join(strNTTMoratoriumId == ntt_breathingspacemoratoriumid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSQLLookupBsmFk\nAlterRowSQL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ntt_debtoreligibilityreviewid'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkSQL"
		}
	}
}