{
	"name": "df_curation_validation_debtoreligibilityreview",
	"properties": {
		"folder": {
			"name": "Transform/BSS/Debtors"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adlsfs_parquet",
						"type": "DatasetReference"
					},
					"name": "sourceStaging"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_adlsfs_parquet",
						"type": "DatasetReference"
					},
					"name": "sinkValidation"
				}
			],
			"transformations": [
				{
					"name": "decolTypeConvertion"
				},
				{
					"name": "dcolIsValid"
				},
				{
					"name": "dcolMandatoryValue"
				},
				{
					"name": "dcolIsTruncate"
				},
				{
					"name": "dcolMandatoryTruncate"
				}
			],
			"script": "source(output(\n\t\towningbusinessunit as string,\n\t\tntt_debtoreligibilityreviewstatusid as string,\n\t\tntt_name as string,\n\t\tstatecode as string,\n\t\tstatuscode as string,\n\t\tcreatedby as string,\n\t\tntt_eligibilitystatusid as string,\n\t\tntt_moratoriumid as string,\n\t\tntt_creditornotes as string,\n\t\townerid as string,\n\t\tmodifiedon as string,\n\t\towninguser as string,\n\t\tmodifiedby as string,\n\t\tntt_debtoreligibilityreviewid as string,\n\t\tntt_creditorid as string,\n\t\tcreatedon as string,\n\t\tntt_moneyadvisernotes as string,\n\t\tintBatchId as integer,\n\t\tpartdist as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tformat: 'parquet') ~> sourceStaging\nsourceStaging derive(tsCreatedOn = toTimestamp(createdon),\n\t\ttsModifiedOn = toTimestamp(modifiedon),\n\t\tstrNTTDebtorEligibilityReviewId = toString(ntt_debtoreligibilityreviewid),\n\t\tstrNTTDebtorEligibilityReviewStatusId = toString(ntt_debtoreligibilityreviewstatusid),\n\t\tstrNTTMoratoriumId = toString(ntt_moratoriumid),\n\t\tstrNTTEligibilityStatusId = toString(ntt_eligibilitystatusid)) ~> decolTypeConvertion\ndecolTypeConvertion derive(blIsValid = iif(isNull(tsCreatedOn) || isNull(tsModifiedOn) ||  isNull(strNTTDebtorEligibilityReviewId) || isNull(strNTTDebtorEligibilityReviewStatusId) || isNull(strNTTEligibilityStatusId) || isNull(strNTTMoratoriumId), toBoolean('0'), toBoolean('1'))) ~> dcolIsValid\ndcolIsValid derive(tsCreatedOn = coalesce(tsCreatedOn, toTimestamp('1900-01-01 00:00:00')),\n\t\ttsModifiedOn = coalesce(tsModifiedOn, toTimestamp('1900-01-01 00:00:00')),\n\t\tstrNTTDebtorEligibilityReviewId = coalesce(strNTTDebtorEligibilityReviewId, 'missing'),\n\t\tstrNTTDebtorEligibilityReviewStatusId = coalesce(strNTTDebtorEligibilityReviewStatusId,'missing'),\n\t\tstrNTTMoratoriumId = coalesce(strNTTMoratoriumId, 'missing'),\n\t\tstrNTTEligibilityStatusId = coalesce(strNTTEligibilityStatusId, 'missing')) ~> dcolMandatoryValue\ndcolMandatoryValue derive(blIsTruncate = iif(length(strNTTDebtorEligibilityReviewStatusId) > 36 || length(ntt_debtoreligibilityreviewid) > 36 || length(strNTTMoratoriumId) > 36 || length(strNTTEligibilityStatusId) > 36, toBoolean('1'), toBoolean('0'))) ~> dcolIsTruncate\ndcolIsTruncate derive(strNTTDebtorEligibilityReviewStatusId = left(strNTTDebtorEligibilityReviewStatusId, 36),\n\t\tstrNTTDebtorEligibilityReviewId = left(strNTTDebtorEligibilityReviewId, 36),\n\t\tstrNTTMoratoriumId = left(strNTTMoratoriumId, 36),\n\t\tstrNTTEligibilityStatusId = left(strNTTEligibilityStatusId, 36)) ~> dcolMandatoryTruncate\ndcolMandatoryTruncate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\ttruncate: true,\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkValidation"
		}
	}
}