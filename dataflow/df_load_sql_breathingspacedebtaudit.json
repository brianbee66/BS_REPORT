{
	"name": "df_load_sql_breathingspacedebtaudit",
	"properties": {
		"folder": {
			"name": "Load/BSS"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_reporting_adls",
						"type": "LinkedServiceReference"
					},
					"name": "sourceODS"
				},
				{
					"dataset": {
						"referenceName": "ds_reporting_lookup_mssql",
						"type": "DatasetReference"
					},
					"name": "sourceSQLLookupDebFk"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_reporting_mssql",
						"type": "DatasetReference"
					},
					"name": "sinkSQL"
				}
			],
			"transformations": [
				{
					"name": "SelectODS"
				},
				{
					"name": "dcolSQL"
				},
				{
					"name": "JoinSQLLookupDebFk"
				},
				{
					"name": "AlterRowSQL"
				},
				{
					"name": "SelectSQLLookupDebFk"
				},
				{
					"name": "FilterODS"
				}
			],
			"script": "parameters{\n\tpartdistFrom as string\n}\nsource(output(\n\t\tntt_correlation as string,\n\t\tntt_breathingspacemoratoriumid as string,\n\t\towningbusinessunit as string,\n\t\tntt_customauditid as string,\n\t\tntt_name as string,\n\t\tstatecode as string,\n\t\tstatuscode as string,\n\t\tcreatedby as string,\n\t\ttimezoneruleversionnumber as string,\n\t\tntt_newvalue as string,\n\t\tntt_order as string,\n\t\tntt_attributemodifiedon as string,\n\t\townerid as string,\n\t\tmodifiedon as string,\n\t\towninguser as string,\n\t\tmodifiedby as string,\n\t\tntt_action as string,\n\t\tcreatedon as string,\n\t\tntt_displayname as string,\n\t\tntt_originalvalue as string,\n\t\tntt_breathingspacedebtorid as string,\n\t\tintBatchId as integer,\n\t\tpartdist as date,\n\t\tblIsValid as boolean,\n\t\ttsModifiedOn as timestamp,\n\t\ttsCreatedOn as timestamp,\n\t\tstrNTTCustomAuditId as string,\n\t\tstrNTTBreathingSpaceDebtId as string,\n\t\tstrNTTBreathingSpaceMoratoriumId as string,\n\t\tblIsTruncate as boolean,\n\t\tstrINSSDebtTypeId as string,\n\t\tstrNTTOriginalValue as string,\n\t\tstrNTTNewValue as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tformat: 'delta',\n\tfileSystem: 'curation',\n\tfolderPath: 'ods/bss/dynamics/references-bss/customaudit') ~> sourceODS\nsource(output(\n\t\tbs_debt_pk_skey as integer,\n\t\tbsm_fk as integer,\n\t\tntt_creditorid_fk as integer,\n\t\tbs_debt_type_fk as integer,\n\t\tntt_breathingspacedebtid as string,\n\t\tntt_breathingspacemoratoriumid as integer,\n\t\tntt_activeregister as boolean,\n\t\tntt_commencementdate as timestamp,\n\t\tisValid as boolean,\n\t\tisTruncate as boolean,\n\t\tbatch_id as integer,\n\t\tntt_debttypeid as string,\n\t\tntt_activeregisterperiodstartdate as timestamp,\n\t\tntt_removedfromregisterdate as timestamp,\n\t\tntt_amount as decimal(19,4),\n\t\tcreatedon as timestamp,\n\t\tmodifiedon as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceSQLLookupDebFk\nJoinSQLLookupDebFk select(mapColumn(\n\t\tbatch_id = intBatchId,\n\t\tisValid = blIsValid,\n\t\tcreatedon = tsModifiedOn,\n\t\tmodifiedon = tsCreatedOn,\n\t\tntt_customauditid = strNTTCustomAuditId,\n\t\tisTruncate = blIsTruncate,\n\t\tntt_originalvalue = strNTTOriginalValue,\n\t\tntt_newvalue = strNTTNewValue,\n\t\tbs_debt_fk = bs_debt_pk_skey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectODS\nSelectODS derive(ntt_customauditid = coalesce(ntt_customauditid, 'unknown'),\n\t\tcreatedon_dimdate_fk = iif(createdon == toTimestamp('1900-01-01 00:00:00'), -1, toInteger(toString(createdon, 'yyyyMMdd'))),\n\t\tmodifiedon_dimdate_fk = iif(modifiedon == toTimestamp('1900-01-01 00:00:00'), -1, toInteger(toString(modifiedon, 'yyyyMMdd')))) ~> dcolSQL\nFilterODS, SelectSQLLookupDebFk join(strNTTBreathingSpaceDebtId == ntt_breathingspacedebtid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSQLLookupDebFk\ndcolSQL alterRow(upsertIf(true())) ~> AlterRowSQL\nsourceSQLLookupDebFk select(mapColumn(\n\t\tbs_debt_pk_skey,\n\t\tntt_breathingspacedebtid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSQLLookupDebFk\nsourceODS filter(partdist >= toDate($partdistFrom)) ~> FilterODS\nAlterRowSQL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ntt_customauditid'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkSQL"
		}
	}
}