{
	"name": "df_load_sql_dynnotificationletter",
	"properties": {
		"folder": {
			"name": "Load/BSS"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_reporting_adls",
						"type": "LinkedServiceReference"
					},
					"name": "sourceODS"
				},
				{
					"dataset": {
						"referenceName": "ds_reporting_lookup_mssql",
						"type": "DatasetReference"
					},
					"name": "sourceSQLLookupBsmFk"
				},
				{
					"dataset": {
						"referenceName": "ds_reporting_lookup_mssql",
						"type": "DatasetReference"
					},
					"name": "sourceSQLLookupBsDebtFk"
				},
				{
					"dataset": {
						"referenceName": "ds_reporting_lookup_mssql",
						"type": "DatasetReference"
					},
					"name": "sourceSQLLookupStatusFk"
				},
				{
					"dataset": {
						"referenceName": "ds_reporting_lookup_mssql",
						"type": "DatasetReference"
					},
					"name": "sourceSQLLookupTemplateFk"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_reporting_mssql",
						"type": "DatasetReference"
					},
					"name": "sinkSQL"
				}
			],
			"transformations": [
				{
					"name": "SelectODS"
				},
				{
					"name": "dcolSQL"
				},
				{
					"name": "JoinSQLLookupBsmFk"
				},
				{
					"name": "AlterRowSQL"
				},
				{
					"name": "SelectSQLLookupBsmFk"
				},
				{
					"name": "FilterODS"
				},
				{
					"name": "SelectSQLLookupBsDebtFk"
				},
				{
					"name": "JoinSQLLookupBsDebtFk"
				},
				{
					"name": "SelectSQLLookupStatusFk"
				},
				{
					"name": "JoinSQLLookupStatusFk"
				},
				{
					"name": "SelectSQLLookupTemplateFk"
				},
				{
					"name": "JoinSQLLookupTemplateFk"
				}
			],
			"script": "parameters{\n\tpartdistFrom as string\n}\nsource(output(\n\t\tstatecode as string,\n\t\tntt_submissionaccepted as string,\n\t\tregardingobjectid as string,\n\t\tleftvoicemail as string,\n\t\tcreatedon as string,\n\t\tntt_payload as string,\n\t\tisbilled as string,\n\t\tsubject as string,\n\t\townerid as string,\n\t\tmodifiedon as string,\n\t\tismapiprivate as string,\n\t\tntt_notificationletterstatusid as string,\n\t\tntt_templateid as string,\n\t\tversionnumber as string,\n\t\tprioritycode as string,\n\t\tntt_resubmit as string,\n\t\tisregularactivity as string,\n\t\tmodifiedby as string,\n\t\tstatuscode as string,\n\t\tactivitytypecode as string,\n\t\tinstancetypecode as string,\n\t\tntt_lastsubmittedon as string,\n\t\tntt_notificationstatusupdated as string,\n\t\tdeliveryprioritycode as string,\n\t\ttimezoneruleversionnumber as string,\n\t\tcreatedby as string,\n\t\towningbusinessunit as string,\n\t\towninguser as string,\n\t\tisworkflowcreated as string,\n\t\tntt_notificationstatus as string,\n\t\tactivityid as string,\n\t\tintBatchId as integer,\n\t\tpartdist as date,\n\t\tblIsValid as boolean,\n\t\ttsModifiedOn as timestamp,\n\t\ttsCreatedOn as timestamp,\n\t\tstrActivityId as string,\n\t\tblNTTSubmissionAccepted as boolean,\n\t\ttsSentOn as timestamp,\n\t\tstrNTTNotificationLetterStatusId as string,\n\t\tstrNTTNotificationStatus as string,\n\t\ttsNTTNotificationStatusUpdated as timestamp,\n\t\tstrNTTTemplateId as string,\n\t\tblIsTruncate as boolean,\n\t\tstrRegardingObjectId as string,\n\t\tstrNTTBreathingSpaceMoratoriumId as string,\n\t\tstrNotificationMoratorium as string,\n\t\tstrNTTBreathingSpaceDebtId as string,\n\t\tstrNotificationDebt as string,\n\t\tstrNotificationType as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tformat: 'delta',\n\tfileSystem: 'curation',\n\tfolderPath: 'ods/bss/dynamics/notifications/notificationletter') ~> sourceODS\nsource(output(\n\t\tbsm_pk_skey as integer,\n\t\tbst_fk as integer,\n\t\tmao_fk as integer,\n\t\tbs_status_type_fk as integer,\n\t\tbs_debtor_fk as integer,\n\t\tparent_cr_fk as integer,\n\t\tchild_cr_fk as integer,\n\t\tntt_breathingspacemoratoriumid as string,\n\t\tntt_commencementdate as timestamp,\n\t\tntt_createdfromapi as boolean,\n\t\tntt_expirydate as timestamp,\n\t\tntt_closuredate as timestamp,\n\t\tntt_submissiondate as string,\n\t\tntt_activeregisterperiodstartdate as timestamp,\n\t\tntt_removedfromregisterdate as timestamp,\n\t\tntt_activeregister as boolean,\n\t\tisValid as boolean,\n\t\tisTruncate as boolean,\n\t\tbatch_id as integer,\n\t\tcreatedon as timestamp,\n\t\tmodifiedon as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceSQLLookupBsmFk\nsource(output(\n\t\tbs_debt_pk_skey as integer,\n\t\tbsm_fk as integer,\n\t\tntt_creditorid_fk as integer,\n\t\tbs_debt_type_fk as integer,\n\t\tntt_breathingspacedebtid as string,\n\t\tntt_breathingspacemoratoriumid as integer,\n\t\tntt_activeregister as boolean,\n\t\tntt_commencementdate as timestamp,\n\t\tisValid as boolean,\n\t\tisTruncate as boolean,\n\t\tbatch_id as integer,\n\t\tntt_debttypeid as string,\n\t\tntt_activeregisterperiodstartdate as timestamp,\n\t\tntt_removedfromregisterdate as timestamp,\n\t\tntt_amount as decimal(19,4),\n\t\tcreatedon as timestamp,\n\t\tmodifiedon as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceSQLLookupBsDebtFk\nsource(output(\n\t\tdyn_notification_letter_status_pk_skey as integer,\n\t\tntt_notificationletterstatusid as string,\n\t\tntt_status as string,\n\t\tisValid as boolean,\n\t\tisTruncate as boolean,\n\t\tbatch_id as integer,\n\t\tcreatedon as timestamp,\n\t\tmodifiedon as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceSQLLookupStatusFk\nsource(output(\n\t\tdyn_notification_template_pk_skey as integer,\n\t\tntt_notificationtemplateid as string,\n\t\tntt_description as string,\n\t\tntt_govukidentifier as string,\n\t\tntt_identifier as string,\n\t\tntt_name as string,\n\t\tisValid as boolean,\n\t\tisTruncate as boolean,\n\t\tbatch_id as integer,\n\t\tcreatedon as timestamp,\n\t\tmodifiedon as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceSQLLookupTemplateFk\nJoinSQLLookupTemplateFk select(mapColumn(\n\t\tbatch_id = intBatchId,\n\t\tisValid = blIsValid,\n\t\tmodifiedon = tsModifiedOn,\n\t\tcreatedon = tsCreatedOn,\n\t\tactivityid = strActivityId,\n\t\tntt_notificationstatus = strNTTNotificationStatus,\n\t\tntt_notificationstatusupdated = tsNTTNotificationStatusUpdated,\n\t\tisTruncate = blIsTruncate,\n\t\tbsm_fk = bsm_pk_skey,\n\t\tbs_debt_fk = bs_debt_pk_skey,\n\t\tdyn_notification_letter_status_fk = dyn_notification_letter_status_pk_skey,\n\t\tdyn_notification_letter_template_fk = dyn_notification_template_pk_skey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectODS\nSelectODS derive(activityid = coalesce(activityid, 'unknown'),\n\t\tcreatedon_dimdate_fk = iif(createdon == toTimestamp('1900-01-01 00:00:00'), -1, toInteger(toString(createdon, 'yyyyMMdd'))),\n\t\tmodifiedon_dimdate_fk = iif(modifiedon == toTimestamp('1900-01-01 00:00:00'), -1, toInteger(toString(modifiedon, 'yyyyMMdd'))),\n\t\tntt_notificationstatusupdated_dimdate_fk = iif(ntt_notificationstatusupdated == toTimestamp('1900-01-01 00:00:00'), -1, toInteger(toString(ntt_notificationstatusupdated, 'yyyyMMdd')))) ~> dcolSQL\nFilterODS, SelectSQLLookupBsmFk join(strNTTBreathingSpaceMoratoriumId == ntt_breathingspacemoratoriumid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSQLLookupBsmFk\ndcolSQL alterRow(upsertIf(true())) ~> AlterRowSQL\nsourceSQLLookupBsmFk select(mapColumn(\n\t\tbsm_pk_skey,\n\t\tntt_breathingspacemoratoriumid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSQLLookupBsmFk\nsourceODS filter(partdist >= toDate($partdistFrom)) ~> FilterODS\nsourceSQLLookupBsDebtFk select(mapColumn(\n\t\tbs_debt_pk_skey,\n\t\tntt_breathingspacedebtid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSQLLookupBsDebtFk\nJoinSQLLookupBsmFk, SelectSQLLookupBsDebtFk join(strNTTBreathingSpaceDebtId == ntt_breathingspacedebtid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSQLLookupBsDebtFk\nsourceSQLLookupStatusFk select(mapColumn(\n\t\tdyn_notification_letter_status_pk_skey,\n\t\tntt_notificationletterstatusid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSQLLookupStatusFk\nJoinSQLLookupBsDebtFk, SelectSQLLookupStatusFk join(strNTTNotificationLetterStatusId == SelectSQLLookupStatusFk@ntt_notificationletterstatusid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSQLLookupStatusFk\nsourceSQLLookupTemplateFk select(mapColumn(\n\t\tdyn_notification_template_pk_skey,\n\t\tntt_notificationtemplateid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSQLLookupTemplateFk\nJoinSQLLookupStatusFk, SelectSQLLookupTemplateFk join(strNTTTemplateId == ntt_notificationtemplateid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSQLLookupTemplateFk\nAlterRowSQL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['activityid'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkSQL"
		}
	}
}